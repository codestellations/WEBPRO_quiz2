@model DaVenti.Models.Employee

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Landing.cshtml";

}

<h2>Join our team, become one with the wind.</h2>

@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Success! </strong>@ViewBag.Message
        </div>
    }
}

else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.email_emp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email_emp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email_emp, "", new { @class = "text-danger" })
            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password_emp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password_emp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.password_emp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.confirm_password_emp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.confirm_password_emp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.confirm_password_emp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.name_emp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.name_emp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name_emp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.phone_num_emp, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.phone_num_emp, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.phone_num_emp, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

        if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                <strong>Error! </strong>@ViewBag.Message
            </div>
        }
    }
}



<div>
    @Html.ActionLink("Login", "Login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
